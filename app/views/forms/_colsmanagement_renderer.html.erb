
Col to hide <select id="hideCol"></select> <!-- <input id="hideCol" type="int"> -->

<!-- <%= fbookupload %> -->

Col to show <select id="show"></select>   <!--input id="show" type="int"-->

<% template_fields = @template.getFields %>

<div hidden>

  <% if ! current_user.nil? %>

  <%= form_tag("/users/"+current_user.id.to_s, :id => 'update_prefs', method: "patch") do %>
  <%= hidden_field_tag(:update_user_data,"") %>
  <%= submit_tag("Update") %>

  <% end %>

<% end %>


</div>

<script type="text/javascript">

  var colsToHide = [];


  function fillDropDown(iddropdown)
  {


  var fragmentShow = document.createDocumentFragment();
  var opt;

  <% index=0 %>

    opt = document.createElement('option');
    opt.innerHTML = "Action";
    opt.value = <%= index %>;
    fragmentShow.appendChild(opt);

  <% index=index+1 %>

  <% template_fields.each do |field| %>
            
    opt = document.createElement('option');
    opt.innerHTML = "<%=field[0]%>";
    opt.value = <%= index %>;
    fragmentShow.appendChild(opt);
    <% index=index+1 %>

  <%end%>

  opt = document.createElement('option');
    opt.innerHTML = "ID";
    opt.value = <%= index %>;
    fragmentShow.appendChild(opt);

  <% index=index+1 %>

  opt = document.createElement('option');
    opt.innerHTML = "last Modification";
    opt.value = <%= index %>;
    fragmentShow.appendChild(opt);

  <% index=index+1 %>

  opt = document.createElement('option');
    opt.innerHTML = "last author";
    opt.value = <%= index %>;
    fragmentShow.appendChild(opt);

  <% index=index+1 %>

  opt = document.createElement('option');
    opt.innerHTML = "recipients";
    opt.value = <%= index %>;
    fragmentShow.appendChild(opt);

  var selShow = document.getElementById(iddropdown);
  selShow.appendChild(fragmentShow);

  return selShow;

  }

  fillDropDown('show');
  fillDropDown('hideCol');

  function hideColumns()
  {
    console.log("hide columns called");

    <% if ! current_user.nil? %>


      $.ajax({ url: '/users/'+<%=current_user.id%>+'.json',
              type: 'GET',
              beforeSend: null,
              data: null,
              success: function(response) {

                if ( response.preferences.template_prefs[<%=@template.id%>] == null )
                {
                  return;
                }

                if ( response.preferences.template_prefs[<%=@template.id%>]["hide"] == null )
                {
                  return;
                }



                console.log("Received from user"+response.preferences.template_prefs[<%=@template.id%>]["hide"]);

                for (var index=0;index<response.preferences.template_prefs[<%=@template.id%>]["hide"].length;index++)
                {
                    console.log("NOW:"+response.preferences.template_prefs[<%=@template.id%>]["hide"][index]);

                    var val = response.preferences.template_prefs[<%=@template.id%>]["hide"][index];
                    var intVal = parseInt(val);
                    colsToHide.push(intVal);
                    updateSettings();


                }

              }
            });

      <% end %>

  }


  hideColumns();
  

  $("#hideCol").on("change", function(e) {
        console.log("hideCol CALLED");
        var val = this.value;
        this.value = "";
        var intVal = parseInt(val);
        if (intVal >= 0) {
            if (colsToHide.indexOf(intVal) === -1) {
                colsToHide.push(intVal);
                console.log("Pushed...");


               

               <% if ! current_user.nil? %>

                $.ajax({ url: '/users/'+<%=current_user.id%>+'.json',
                  type: 'PATCH',
                  beforeSend: function(xhr) {xhr.setRequestHeader('X-CSRF-Token', $('meta[name="csrf-token"]').attr('content'))},
                  data: {user: {pref_template: "<%=@template.id%>", pref_hide: val}},
                  success: function(response) {}
                });

                <% end %>


                
            }
        }
        updateSettings();

    })

    $("#show").on("change", function(e) {
        var val = this.value;
        this.value = "";
        var intVal = parseInt(val);
        if (intVal >= 0) {
            var indexToRemove = colsToHide.indexOf(intVal);
            if (~indexToRemove) {
                colsToHide.splice(indexToRemove, 1);

                <% if ! current_user.nil? %>

                $.ajax({ url: '/users/'+<%=current_user.id%>+'.json',
                  type: 'PATCH',
                  beforeSend: function(xhr) {xhr.setRequestHeader('X-CSRF-Token', $('meta[name="csrf-token"]').attr('content'))},
                  data: {user: {pref_template: "<%=@template.id%>", pref_show: val}},
                  success: function(response) {}
                });

                <% end %>
            }
        }
        updateSettings();
    })

  

  function updateSettings() {
        var newCols = [];
        var newHeaders = [];

        for (var i = 0; i < globalColumns.length; i++) {
            if (colsToHide.indexOf(i) === -1) {
                console.log("Pushing"+i);

                newCols.push(globalColumns[i]);
                newHeaders.push(colFields[i]);
            }
        }
        hot.updateSettings({
            columns: newCols,
            colHeaders: newHeaders
        });
    };

</script>