


<script type="text/javascript">

  <% template_fields = @template.getFields %>

  var template_id = <%=@template.id%>;



  //var updatesPresent = false;
  var originalLenght = <%=@reports.count%>;

  var viewState = "idle"; // idle, canDelete, canUpdate, canCreate

  var fragment = document.createDocumentFragment();
  var opt;



  
  var  data = [
    <% @reports.each do |report| %>
        
        { Action: false,
          <% template_fields.each do |field| %>
             "<%=field[0]%>":"<%= report.getDataVal(field[0]) %>",
          <% end %>
          id: "<%= report.id  %>",
          updated_at: "<%= report.updated_at  %>",
          <% if report.creator.nil? %>
          creator: "NULL",
          <% else %>
          creator: "<%= User.find(report.creator).email %>",
          <%end%>
          results: '<%= link_to "Results", report %>'
        },
    <% end %>
        
    ];
  

// Temporal hardcoding see how it works



//var RefFormEditor = setRefFormEditor();

//var RefFormEditor2 = RefFormEditor.prototype.extend();
//RefFormEditor2.prototype.url = "https://www.elmundo22.es/reports/";
//RefFormEditor2.prototype.myData = manufacturerData;

var RefEditors = {};

<% template_fields.each do |field| %>

<% if field[3] == "reference" %>

<% ref_data = field[4].split("|") %>

 RefEditors["<%=field[0]%>"] = getRefFormEditor("<%= ref_data[0] %>",
                               <%= ref_data[1] %>,"<%= ref_data[2] %>",
                               ['Id', 'Marque', 'Country', 'Parent company'] );

<% end %>

<% end %>

//////

var dataTemp = data.slice();

var searchFiled = document.getElementById('search_field');

<% template_fields = @template.getFields %>

var colFields =  ["Action", 
  <% template_fields.each do |field| %>
           "<%=field[0]%>",
  <% end %>
  "ID","Last modification", "Last author",
  "Results"];

var globalColumns = [
      {data: "Action", type: "checkbox", renderer: checkboxRenderer},
      
      
      <% template_fields.each do |field| %>
        <% if field[3] == "link" %>
            {data:"<%=field[0]%>",
              renderer: linkRenderer},
        <% elsif field[3] == "checkbox" %>
            {data:"<%=field[0]%>",
              renderer: checkboxRenderer},
        <% elsif field[3] == "reference" %>
            {data:"<%=field[0]%>",
             editor: RefEditors["<%=field[0]%>"],
             renderer: linkRenderer,
             handsontable: {
                colHeaders: RefEditors["<%=field[0]%>"].colheaders,
                data: RefEditors["<%=field[0]%>"].MyData
              }},

        <% elsif field[3]=="dropdown" %>
           {data:"<%=field[0]%>",
            type: "<%=field[3]%>",
            source: [ <% options = field[4].split(';') %>
                      <% options.each do |option| %>
                          '<%= option %>',
                      <% end %> ] },
        <%else%>
           {data:"<%=field[0]%>",
            type: "<%=field[3]%>"},
        <%end%>   
  <% end %>
      {data: "id",
       type: "numeric",
        readOnly: true},
      {data: "updated_at",
        type: "date",
        readOnly: true},
      {data: "creator",
       type: "text",
        readOnly: true},
      {data: "results",
       renderer: "html",
       type: "text"
       }
    ];

container=document.getElementById('example');
hot=setupHot(container,globalColumns,colFields,data);

//hot2=setupHot(document.getElementById('example2'));


//function cellChange(changes, source) {
//    console.log("Change on"+changes+"\n"+source);
//    hot.setDataAtCell(0, 0, true);
//  };

function onlyExactMatch(queryStr, value) {
    return queryStr.toString() === value.toString();
  };

  Handsontable.Dom.addEvent(searchFiled, 'keyup', function (event) {
    var queryResult = hot.search.query(this.value);

    

    if (this.value != "")
    {
      var curdata = hot.getData();

      
      for (i = data.length -1 ; i >=0  ; i--) {

        console.log(i);

        found = 0;

        for (j=0;j<queryResult.length;j++)
        {
            if ( queryResult[j].row == i ) {

              found = 1;
              console.log("FOUND");
              //data.push(dataTemp[i].slice());
              j=queryResult.length;
            }
        }

        if ( found == 0 )
        {
          console.log("NOT FOUND");

          //hot.alter("remove_row",i,1);

          data.splice(i,1);
          //hot.spliceRow(i,0,7);



        }

      }
    }
    else
    {
      console.log("set back");
      data=dataTemp.slice();
      hot.loadData(data);
    }

    console.log(queryResult);
    hot.render();
  });

  function hiddenRowRender(instance, td, row, col, prop, value, cellProperties) {
    td.style.display = "none";
}

</script>







