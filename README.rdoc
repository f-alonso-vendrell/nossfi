= NOSSFI - No Spread Sheet File

==A sort of Wiki for Structured Information 

Why? Because Spread Sheets are great...

... as long as you do not use them in a large group of people (What version do you have? What changed respect previous version? The starting data? The operations? Who changed what? Who reviewed? How is it supposed to be used now?...)

... as long as you assume you are seeing all the information ( Did you check data on XY999999? Did you check that all sums cover all range they should?...)

{<img src="https://raw.githubusercontent.com/f-alonso-vendrell/nossfi/master/moneylost.png">}[http://google.com]

Still Spread Sheets are great:

* Easy to learn, so that even managers can make use of them

* Easy to fill in data, with datatypes

* Easy to change, filter, obtain new results

* Easy to present with fancy summaries and graphs

So a Nossfi decouples a little all that is great in a spread sheet and provides an enviroment to limit the dark side of spreadsheets

{<img src="https://raw.githubusercontent.com/f-alonso-vendrell/nossfi/master/Structure.png">}[https://github.com/f-alonso-vendrell/nossfi]

==Nossfi resources

=== Templates

Templates define the structures that can be filled up (think of table schema, or fields definition for a form you want your employees to fill...). The list of them are the landing page of a nossfi, in this version on /templates

* Name and Version

* Author

* Description, what is this for?

* Fields (numeric, text, date, list, check, link, reference)

* Field description, what is this for?

* Field example

=== Forms

Forms contain the "fresh" data as defined in one of the templates, thus data that can not be derived from other data this nossfi. Since forms are created from a template requesting them as a list is done by /forms?template_id=<template_id> usually linked from /templates

===  Filters

Filters contain the operations to be done on the forms (like =A5+B2, but istead total_income=financial_income+non_financial_income). Filters can be listed at /filters currently a filter is looselly tied to a single template, and can be written as a condition in Ruby.

===  Reports

Reports are based on Forms and Filters present data in a predefined format. Their implementation should rely on mature filters (yet to be outlined), currently they can only be done as ad-hoc javascript rendered.

== A NOSSFI as a Self Contained System

=== Authentication

A Nossfi should provide means for authentication or its delegation. Based on Devise or Omniauth it can cover mechanisms requested. This implementation uses a modified Devise to SFA based on link emailed to user, thus it authenticates withouth having need for passwords

=== Authorization

A Nossfi should provide means for authorization or its delegation in other systems. This implementation treats all users (except admin) the same that is all users within and organization (email domain) have the same level of privileges

=== Accounting

A Nossfi should provide means for individual accountin of activities. This implementation logs any Form and Template operation and provides no personalization (although the framework is under study)

=== Notifications

A Nossfi should provide means for individual subscription and its configuration. An initial attempt is done via forced subscription email in a totally non-scallable manner, and it is to be dropped as it is too distracting. If you use this implementation do not use "recipients".

== This NOSSFI Implementation

=== Configuration

Configure your database as needed. Follow any of the docs to use other databases. Follo docs on how to execute the migrations to set up the database.

This implementation uses mailcatcher, if you plan to use a real database server configure in your <environment>.rb 

config.action_mailer.default_url_options

config.action_mailer.delivery_method 

config.action_mailer.smtp_settings

Also it is recommended to use SSL in doing so change

config.force_ssl = true

Change the admin email (currently no special privilege except being able to see /admin) and the regexp of allowed users

config.admin_email = 'admin@your domain'

config.loginval = 'a email regexp to match your nossfi domain'

== Pending things to doc:

* Ruby version

* System dependencies

* How to run the test suite

* Services (job queues, cache servers, search engines, etc.)

* Deployment instructions

* ...


Please feel free to use a different markup language if you do not plan to run
<tt>rake doc:app</tt>.
